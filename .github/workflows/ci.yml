name: CI Workflow
on: push
jobs:
    test:
        environment: devops-image-classifier
        runs-on: ubuntu-latest
        steps:
            - name: Get code
              uses: actions/checkout@v4
            - name: Cache models
              id: cache-models
              uses: actions/cache@v3
              with:
                path: |
                  mobilenet_v3_large-5c1a4163.pth
                  wide_resnet50_2-9ba9bcbe.pth
                key: model-files-${{ runner.os }}
            - name: Get models
              if: steps.cache-models.outputs.cache-hit != 'true'
              run: |
                curl https://download.pytorch.org/models/mobilenet_v3_large-5c1a4163.pth -o mobilenet_v3_large-5c1a4163.pth
                curl https://download.pytorch.org/models/wide_resnet50_2-9ba9bcbe.pth -o wide_resnet50_2-9ba9bcbe.pth
            - name: Setup QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build Docker image for tests of the fallback
              run: |
                docker build --target fallback_base_test -t ${{ secrets.DOCKERHUB_USERNAME }}/fallback_base_test:latest .
            - name: Run Docker image for tests of the fallback
              run: |
                docker run --rm -e PYTHONPATH=/app -e MODEL_NAME=mobilenet_v3_large ${{ secrets.DOCKERHUB_USERNAME }}/fallback_base_test:latest
            - name: Build and push image of the fallback on success
              run: |
                docker build --target fallback_base -t ${{ secrets.DOCKERHUB_USERNAME }}/fallback_base:latest .
                docker push ${{ secrets.DOCKERHUB_USERNAME }}/fallback_base:latest
            - name: Build Docker image for tests of the main
              run: |
                docker build --target main_base_test -t ${{ secrets.DOCKERHUB_USERNAME }}/main_base_test:latest .
            - name: Run Docker image for tests of the main
              run: |
                docker run --rm -e PYTHONPATH=/app -e MODEL_NAME=wide_resnet50_2 ${{ secrets.DOCKERHUB_USERNAME }}/main_base_test:latest
            - name: Build and push image of the main on success
              run: |
                docker build --target main_base -t ${{ secrets.DOCKERHUB_USERNAME }}/main_base:latest .
                docker push ${{ secrets.DOCKERHUB_USERNAME }}/main_base:latest